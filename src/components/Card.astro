---
// Importar colecciones
import { getCollection, type CollectionEntry } from "astro:content";
const blogEntries: CollectionEntry<"posts">[] = await getCollection("posts");

// Ordenar los artículos del más reciente al más antiguo
blogEntries.sort((a, b) => new Date(b.data.createdAt).getTime() - new Date(a.data.createdAt).getTime());
---

<!-- Asegurar que el row esté centrado solo en pantallas pequeñas -->
<div class="row">
  {
    blogEntries.map((b) => {
      return (
        <div class="col-md-4 col-sm-6 col-12 mb-4"> {/* Eliminar mx-auto aquí */}
          <div class="card h-100" style="box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);">
            <img src={b.data.image} class="card-img-top" style="width: auto; height: 150px; object-fit: cover;">
            <div class="card-body d-flex flex-column">
              <h5 class="card-title">{b.data.title}</h5>
              <p class="card-text">{b.data.description}</p>
              <a href={`/blog/${b.slug}`} class="btn btn-primary mt-auto" style="box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);">Leer más</a>
            </div>
            <div class="card-footer">
              <small class="text-muted">Publicado el: {b.data.createdAt}</small>
              <br>
              <small class="text-muted">Actualizado el: {b.data.updatedAt}</small>
            </div>
          </div>
        </div>
      );
    }).slice(0,3)
  }
</div>

<style>
  .btn {
    transition: transform 0.3s ease; /* Transición suave para el efecto de zoom */
  }
  .btn:hover {
    transform: scale(1.05); /* Efecto de zoom al pasar el mouse */
  }

  /* Asegurar que los cards estén centrados en móviles */
  @media (max-width: 576px) {
    .col-12 {
      display: flex;
      justify-content: center; /* Centrar los cards en pantallas móviles */
    }
  }
</style>

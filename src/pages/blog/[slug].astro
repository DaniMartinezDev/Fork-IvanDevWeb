---
import { getCollection, type CollectionEntry } from "astro:content";
import Navbar from "../../components/navbar.astro";
import Footer from "../../components/Footer.astro";
import "../../css/styles.css";
import "../../js/theme-mode.js"

export async function getStaticPaths() {
  const blogEntries: CollectionEntry<"posts">[] = await getCollection("posts");

  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Funci√≥n para formatear la fecha
const formattedDate = new Intl.DateTimeFormat('es-MX', { 
  year: 'numeric', 
  month: 'long', 
  day: 'numeric' 
}).format(new Date(entry.data.createdAt));
---

<!DOCTYPE html>
<html lang="es" data-bs-theme="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" type="image/svg+xml" href="/icon.png" />
    <title>{entry.data.title} - Ivan FX</title>
</head>
<body>

    <Navbar />

    <div class="post-conte">
        <h1>{entry.data.title}</h1>
        <p class="post-date">Publicado el {formattedDate}</p>
        <hr>
        <div class="content">
            <Content />
        </div>
        <hr>

        <div class="comments-section">
            <h4>Comentarios</h4>
            <script src="https://utteranc.es/client.js"
                repo="ElIvanFX/newweb"
                issue-term="pathname"
                theme="dark-blue"
                crossorigin="anonymous"
                async>
            </script>
        </div>
    </div>

    <Footer />

    <!-- Script de Bootstrap -->
    <script src="https://cdn.jsdelivr.net/npm/fast-bootstrap@latest/dist/js/fast-bootstrap.bundle.min.js"></script>
    <script src="../../js/theme-mode.js"></script>
</body>
</html>
